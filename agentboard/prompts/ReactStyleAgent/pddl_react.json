{
    "blockworld": {
            "examples": [
                "Here is the example:\nGoal: The goal is to satisfy the following conditions: b1 is on b2., b2 is on b3.\nb1 is on the table.  b2 is on the table.  B3 is on the table. Robot arm is empty. The b1 is clear. The b2 is clear. The b3 is clear.",
                "Thought: All blocks are on the table. Since b2 needs to go on b3, I'll start by picking up b2.\nAction: pickup b2",
                "Observation: b1 is on the table.  B2 is on the table.  The b1 is clear. The b3 is clear. You are holding b2.",
                "Thought: Now I'll try to stack b2 on b3 to achieve the lower part of the goal.\nAction: stack b2 b3",
                "Observation: b1 is on the table.  b1 is on b2. B3 is on the table. Robot arm is empty. The b1 is clear. The b2 is clear.",
                "Thought: I mistakenly stacked b1 on b2 instead of b2 on b3. Let me try to fix that. I'll try to pick up b2 again.\nAction: pickup b2",
                "Observation: The action is not valid and therefore takes no effect. Please remember to satisfy the restriction of actions. You can also check valid actions.",
                "Thought: I’ll check what actions are currently allowed.\nAction: check valid actions",
                "Observation: valid actions are: pickup b2, unstack b1 b2.",
                "Thought: Since b1 is on b2, I need to unstack b1 first to access b2.\nAction: pickup b1",
                "Observation: b2 is on b3. B3 is on the table.  Robot arm is empty. The b2 is clear.  You are holding b1.",
                "Thought: Now that I'm holding b1 and b2 is free, I can complete the final stacking step: put b1 on b2.\nAction: stack b1 b2",
                "Observation: b1 is on b2. b2 is on b3. B3 is on the table.  Robot arm is empty. The b1 is clear. The goal is satisfied."
            ], 
            "instruction": "The robot has four actions: pickup, putdown, stack, and unstack. The domain assumes a world where there are a set of blocks that can be stacked on top of each other, an arm that can hold one block at a time, and a table where blocks can be placed.\n    The actions defined in this domain include:\n    pickup <block>: allows the arm to pick up a block from the table if it is clear and the arm is empty. After the pickup action, the arm will be holding the block, and the block will no longer be on the table or clear.\n    putdown <block>: allows the arm to put down a block on the table if it is holding a block. After the putdown action, the arm will be empty, and the block will be on the table and clear.\n    stack <block> <block>: allows the arm to stack a block on top of another block if the arm is holding the top block and the bottom block is clear. After the stack action, the arm will be empty, the top block will be on top of the bottom block, and the bottom block will no longer be clear.\n    unstack <block> <block>: allows the arm to unstack a block from on top of another block if the arm is empty and the top block is clear. After the unstack action, the arm will be holding the top block, the top block will no longer be on top of the bottom block, and the bottom block will be clear.\n", 
            "system_msg": "You are a master in planning."}, 
    "barman": {
            "examples": [
                "Here is the example:\nGoal: The goal is to satisfy the following condition: shot1 contains cocktail1.\nCocktail1 consists of ingredient1 and ingredient3. Dispenser1, 2, 3 each dispense ingredient1, 2, 3 respectively. Shot1 and shaker1 are clean and empty. Shaker1 is on table at level l0. Right and left hands are empty.",
                "Thought: To make cocktail1, I need to mix ingredient1 and ingredient3. First, I’ll pick up shot1 to start collecting ingredients.\nAction: right grasp shot1.",
                "Observation: You are holding shot1 with right hand.",
                "Thought: I’ll fill shot1 with ingredient3 first by using dispenser3.\nAction: fill-shot glass shot1 with ingredient3 with right and left holding dispenser3",
                "Observation: Shot1 contains ingredient3.",
                "Thought: I need to transfer this to a shaker. Let me check the valid actions.\nAction: check valid actions",
                "Observation: Valid actions include pouring ingredient3 from shot1 into clean shaker1 at level l1.",
                "Thought: I’ll pour ingredient3 from shot1 into shaker1.\nAction: pour-shot-to-clean-shaker from a shot glass shot1 with ingredient3 to a clean shaker shaker1 with hand right from level l0 to level l1",
                "Observation: Shaker1 now contains ingredient3.",
                "Thought: I should clean shot1 before adding the next ingredient.\nAction: clean-shot glass shot1 with ingredient3 with hand right holding shot glass and left",
                "Observation: Shot1 is clean.",
                "Thought: Now I’ll fill shot1 with the second required ingredient, ingredient1.\nAction: fill-shot glass shot1 with ingredient1 with right and left holding dispenser1",
                "Observation: Shot1 contains ingredient1.",
                "Thought: I’ll pour ingredient1 into shaker1 which already contains ingredient3.\nAction: pour-shot-to-used-shaker from a shot glass shot1 with ingredient1 to a used shaker shaker1 with hand right from level l1 to level l2",
                "Observation: Shaker1 now contains ingredient1 and ingredient3. It is at level l2.",
                "Thought: I’ll clean shot1 again to prepare for the final pour.\nAction: clean-shot glass shot1 with ingredient1 with hand right holding shot glass and left",
                "Observation: Shot1 is clean.",
                "Thought: Now I’ll drop shot1 since I need to shake the shaker.\nAction: right leave shot1",
                "Observation: Right hand is empty.",
                "Thought: I’ll pick up shaker1 to shake the mixture.\nAction: right grasp shaker1",
                "Observation: You are holding shaker1 with right hand.",
                "Thought: Now I’ll shake shaker1 to combine ingredient1 and ingredient3 into cocktail1.\nAction: shake a cocktail cocktail1 with ingredient ingredient1 and ingredient ingredient3 in a shaker shaker1 with hand right and hand left",
                "Observation: Shaker1 is shaked.",
                "Thought: Time to pour the mixed cocktail1 into shot1.\nAction: pour-shaker-to-shot to a shot glass cocktail1 the ingredient shot1 with hand right from shaker shaker1 from level l2 to level l1",
                "Observation: Shot1 contains cocktail1. The task is completed."
            ], 
            "instruction": "You are a robot barman that manipulates drink dispensers, shot glasses and a shaker. You have two hands. The goal is to find a plan that serves a desired set of drinks. Here are the actions you can do. Each valid action is a short phrase following fixed patterns:\n\n    <hand> grasp <container>: Grasp a container\n    <hand> leave <container>: Leave a container on the table\n    fill-shot <shot> <ingredient> <hand1> <hand2> <dispenser>: Fill a shot glass with an ingredient from dispenser\n    refill-shot <shot> <ingredient> <hand1> <hand2> <dispenser>: Refill a shot glass with an ingredient from dispenser\n    empty-shot <hand> <shot> <beverage>: Empty a shot glass\n    clean-shot <shot> <beverage> <hand1> <hand2>: Clean a shot glass\n    pour-shot-to-clean-shaker <shot> <ingredient> <shaker> <hand1> <level1> <level2>: Pour an ingredient from a shot glass to a clean shaker from level1 to level2\n    pour-shot-to-used-shaker <shot> <ingredient> <shaker> <hand1> <level1> <level2>: Pour an ingredient from a shot glass to a used shaker from level1 to level2\n    empty-shaker <hand> <shaker> <cocktail> <level1> <level2>: Empty a shaker containing cocktail from level1 to level2\n    clean-shaker <hand1> <hand2> <shaker>: Clean a shaker\n    shake <cocktail> <ingredient1> <ingredient2> <shaker> <hand1> <hand2>: Shake a cocktail in a shaker\n    pour-shaker-to-shot <beverage> <shot> <hand> <shaker> <level1> <level2>: Pour a beverage from a shaker to a shot glass from level1 to level2\n\n    You have the following restrictions on your actions:\n    You can only grasp a container if your hand is empty and it is on the table.\n    You can only leave a container if you are holding it.\n    You can only fill a shot glass if you are holding the shot glass, your other hand is empty, the shot glass is empty and clean.\n    You can only refill a shot glass if you are holding the shot glass, your other hand is empty, the shot glass is empty and has contained the saree ingredient before.\n    You can only empty a shot glass if you are holding the shot glass and it contains a beverage.\n    You can only pour from a shot glass to a clean shaker if you are holding the shot glass, the shot glass contains an ingredient, and the shaker is empty and clean.\n    You can only pour from a shot glass to a used shaker if you are holding the shot glass, the shot glass contains an ingredient, the shaker is unshaked and at a level not full.\n    You can only empty a shaker if you are holding the shaker and the shaker contains a shaked beverage.\n    You can only clean a shaker if you are holding the shaker, your other hand is empty, and the shaker is empty.\n    You can only shake a cocktail if you are holding the shaker, your other hand is empty, the shaker is unshaked, and the shaker contains two ingredients, and both ingredients are parts of a cocktail.\n    You can only pour from a shaker to a shot glass if you are holding the shaker, the shaker contains the cocktail, the shaker is shaked, and the shot glass is empty and clean.\n\n    Once you grasp a container, you are holding the container and the container is not on the table.\n    Once you leave a container on the table, your hand become empty.\n    Once you pour an ingredient from a shot glass to a shaker, the shaker contains the ingredient and is at one level above the previous level, and the shot glass becomes empty.\n    Once you empty a shaker, the shaker is at the empty level.\n    Once you shake, the two ingredients in the shaker become a cocktail.\n    Once you pour from a shaker to a shot glass, the shot glass contains the beverage in the shaker, the shot glass is no longer clean and empty, and the shaker is at one level below the previous level.\n",
            "system_msg": "You are a master in planning."},
    "gripper": {
            "examples": [
                "Here is the example:\nGoal: The goal is to satisfy the following conditions: ball1, ball2, and ball3 are all at roomb.\nAll three balls are at rooma. Robby is also at rooma. Both left and right grippers are free.",
                "Thought: I’ll start by picking up ball1 using the right gripper.\nAction: Pick up ball1 at rooma with arm right.",
                "Observation: Ball1 is now held in the right gripper.",
                "Thought: I can carry a second ball, so I’ll use the left gripper to pick up ball2.\nAction: Pick up ball2 at rooma with arm left.",
                "Observation: Ball2 is now held in the left gripper.",
                "Thought: Now that I have two balls, I’ll move to roomb to drop them off.\nAction: Move from rooma to roomb.",
                "Observation: Robby is now at roomb, carrying ball1 (right) and ball2 (left).",
                "Thought: Attempt to drop ball1, but mistakenly try to drop it at rooma while being in roomb.\nAction: drop ball1 at rooma with arm right.",
                "Observation: Invalid action – location mismatch.",
                "Thought: I’ll check valid actions to correct the mistake.\nAction: check valid actions.",
                "Observation: Valid actions include dropping ball1 and ball2 at roomb.",
                "Thought: Drop ball1 properly at roomb using the right gripper.\nAction: drop ball1 roomb right.",
                "Observation: Ball1 is now at roomb. Right gripper is free.",
                "Thought: Now drop ball2 at roomb using the left gripper.\nAction: drop ball2 roomb left.",
                "Observation: Ball2 is now at roomb. Left gripper is free.",
                "Thought: Only ball3 remains at rooma, so I’ll go back to get it.\nAction: move from roomb to rooma.",
                "Observation: Robby is back at rooma. Ball3 is still there.",
                "Thought: Pick up ball3 with the right gripper.\nAction: Pick up ball3 at rooma with arm right.",
                "Observation: Ball3 is now being carried in the right gripper.",
                "Thought: Return to roomb with ball3.\nAction: Move from rooma to roomb.",
                "Observation: Robby is now at roomb with ball3 in the right gripper.",
                "Thought: Drop ball3 at roomb using the right gripper.\nAction: drop ball3 roomb right.",
                "Observation: Ball3 is now at roomb. All three balls (ball1, ball2, ball3) are at roomb. Task is completed."
            ], 
            "instruction": "You are a robot with a gripper that can move objects between different rooms. Your name is Robby.\n    There are three actions defined in this domain:\n    move <room1> <room2>: This action allows the robot to move from one room to another.The action has a single precondition, which is that the robot is currently in a room. The effect of this action is to move the robot to another room and to remove the fact that it is in the original room.\n    pick <obj> <room> <gripper>: This action allows the robot to pick up an object using the gripper. The action has three preconditions: (1) the object is located in a room (2) the robot is currently in the same room and (3) the gripper is free (i.e., not holding any object). The effect of this action is to update the state of the world to show that the robot is carrying the object using the gripper, the object is no longer in the room, and the gripper is no longer free.\n    drop <obj> <room> <gripper>: This action allows the robot to drop an object that it is carrying. The action has two preconditions: (1) the robot is currently carrying the object using the gripper, and (2) the robot is currently in a room. The effect of this action is to update the state of the world to show that the robot is no longer carrying the object using the gripper, the object is now located in the room, and the gripper is now free.\n",
            "system_msg": "You are a master in moving objects."},
    "tyreworld": {
        "examples": [
                "Here is the example:\nGoal: The goal is to satisfy the following condition: w1 is in boot. (Note: you must open the boot first to extract tools.)\nBoot is closed but unlocked. W1 (the wheel) is currently on the hub the-hub1, which is fastened and on the ground. Tools like the jack, wrench, pump, and a replacement wheel r1 are all inside the boot.",
                "Thought: I need to access the tools in the boot first, so I’ll open it.\nAction: Open boot.",
                "Observation: Boot is open.",
                "Thought: I’ll start by taking the wrench out so I can loosen the nuts on the hub.\nAction: fetch wrench from boot.",
                "Observation: You have wrench.",
                "Thought: Let’s see what I can do next.\nAction: check valid actions.",
                "Observation: I can now fetch other tools, loosen nuts, or close the boot.",
                "Thought: I’ll loosen the nuts on the hub before lifting it.\nAction: Loosen the nut nuts1 on the hub the-hub1.",
                "Observation: The nut nuts1 on the hub is now loose.",
                "Thought: Now I need the jack to lift the car.\nAction: fetch jack from boot.",
                "Observation: You have jack.",
                "Thought: I’ll jack up the hub so I can remove the wheel.\nAction: jack-up the hub the-hub1.",
                "Observation: The hub the-hub1 is no longer on the ground.",
                "Thought: Now that it's lifted and the nuts are loose, I’ll unfasten the hub.\nAction: Undo the fastening of the nut nuts1 on the hub the-hub1.",
                "Observation: The hub is now unfastened.",
                "Thought: Time to remove the wheel w1 from the hub.\nAction: Remove-wheel w1 from the hub the-hub1.",
                "Observation: You have w1.",
                "Thought: I’ll now place w1 into the boot to complete the task.\nAction: Put-away w1 in boot.",
                "Observation: W1 is in boot. Goal is completed."
            ], 
        "instruction": "Your goal is to replace flat tyres with intact tyres on the hubs. Remember to open boot first to get tools you need. Intact tyres should be inflated. The nuts should be tight on the hubs. The flat tyres, wrench, jack, and pump should be in the boot. The boot should be closed.\n    There are 13 actions defined in this domain:\n    open <container>: The precondition for this action is that the container is unlocked and closed. The effect of this action is that the container is open and not closed.\n    close <container>: The precondition for this action is that the container is open. The effect of this action is that the container is closed and not open.\n    fetch <object> <container>: The precondition for this action is that the object is inside the container and the container is open. The effect of this action is that the object is held by the agent and not inside the container.\n    put-away <object> <container>: The precondition for this action is that the object is held by the agent and the container is open. The effect of this action is that the object is inside the container and not held by the agent.\n    loosen <nut> <hub>: The precondition for this action is that the agent has a wrench, the nut on hub is tight, and the hub is on the ground. The effect of this action is that the nut on hub is loose and not tight.\n    tighten <nut> <hub>: The precondition for this action is that the agent has a wrench, the nut on hub is loose, and the hub is on the ground. The effect of this action is that the nut on hub is tight and not loose.\n    jack-up <hub>: This action represents the process of lifting a hub off the ground using a jack. It requires the agent to have a jack and for the hub to be on the ground. After performing this action, the hub will no longer be on the ground and the agent will no longer have the jack.\n    jack-down <hub>: This action represents the process of lowering a hub back to the ground from an elevated position using a jack. It requires the agent to have the hub off the ground. After performing this action, the hub will be back on the ground and the agent will have the jack.\n    undo <nut> <hub>: This action undo the fastening of a nut on a hub. The preconditions are the hub is not on the ground (i.e., it has been jacked up), the hub is fastened, the agent has a wrench and the nut is loose. The effects are the agent has the nut, the hub is unfastened, the hub is no longer loose and the hub is not fastened anymore.\n    do-up <nut> <hub>: This action fasten a nut on a hub. The preconditions are the agent has a wrench, the hub is unfastened, the hub is not on the ground (i.e., it has been jacked up) and the agent has the nut to be fastened. The effects are the nut is now loose on the hub, the hub is fastened, the hub is no longer unfastened and the agent no longer has the nut.\n    remove-wheel <wheel> <hub>: This action removes a wheel from a hub. It can only be performed if the hub is not on the ground, the wheel is currently on the hub, and the hub is unfastened. After the action is performed, the agent will have the removed wheel and the hub will be free, meaning that the wheel is no longer on the hub.\n    put-on-wheel <wheel> <hub>: This action puts a wheel onto a hub. It can only be performed if the agent has the wheel, the hub is free, the hub is unfastened, and the hub is not on the ground. After the action is performed, the wheel will be on the hub, the hub will no longer be free, and the agent will no longer have the wheel.\n    inflate <wheel>: This action inflates a wheel using a pump. It can only be performed if the agent has a pump, the wheel is not inflated, and the wheel is intact. After the action is performed, the wheel will be inflated.\n",
        "system_msg": "You are a master in car repair."}
}
